The ``101-lazy_matrix_mul`` module
======================

Using ``def lazy_matrix_mul(m_a, m_b)``
-------------------


Import function from module:
      >>> matrix_mul = __import__('101-lazy_matrix_mul').lazy_matrix_mul

Check for Documentation:
      >>> mod_doc = __import__("101-lazy_matrix_mul").__doc__
      >>> len(mod_doc) > 1
      True

      >>> func_doc = __import__("101-lazy_matrix_mul").lazy_matrix_mul.__doc__
      >>> len(func_doc) > 1
      True

Now completing function tests:

      >>> m_a = [[1, 2], [3, 4]]
      >>> m_b = [[1, 2], [3, 4]]
      >>> matrix_mul(m_a, m_b)
      array([[ 7, 10],
             [15, 22]])

      >>> m_a = []
      >>> matrix_mul(m_a, m_b)
      Traceback (most recent call last):
      ...
      ValueError: shapes (0,) and (2,2) not aligned: 0 (dim 0) != 2 (dim 0)

      >>> m_a = [[], []]
      >>> matrix_mul(m_a, m_b)
      Traceback (most recent call last):
      ...
      ValueError: shapes (2,0) and (2,2) not aligned: 0 (dim 1) != 2 (dim 0)

      >>> m_a = [[1, "hol"], [3, 4]]
      >>> matrix_mul(m_a, m_b)
      Traceback (most recent call last):
      ...
      TypeError: invalid data type for einsum

      >>> m_a = [[1, 2, 3], [4, 5]]
      >>> matrix_mul(m_a, m_b)
      Traceback (most recent call last):
      ...
      ValueError: setting an array element with a sequence.

      >>> m_a = [[1, 2]]
      >>> m_b = [[1, 2], [2, 3], [4, 5]]
      >>> matrix_mul(m_a, m_b)
      Traceback (most recent call last):
      ...
      ValueError: shapes (1,2) and (3,2) not aligned: 2 (dim 1) != 3 (dim 0)

      >>> matrix_mul()
      Traceback (most recent call last):
      ...
      TypeError: lazy_matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'

      >>> m_a = [[2.5, 2.8], [3.1, 4.9]]
      >>> m_b = [[0.2, 2.6], [5.3, 7.4]]
      >>> matrix_mul(m_a, m_b)
      array([[15.34, 27.22],
             [26.59, 44.32]])
